# https://docs.github.com/en/actions/creating-actions/creating-a-composite-action
# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions
# https://doug.sh/posts/using-composite-actions-with-github-actions/
# https://wallis.dev/blog/composite-github-actions

name: "Build"
description: "Build service"

# Input parameters allow you to specify data that the action expects to use during runtime. GitHub stores input parameters as environment variables.(so they are just string)
# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#inputs
inputs:
  application-version:
    description: Application version
    required: false
  project-path:
    description: Path to project to test e.g. Services/Catalog/Catalog.API
    required: true
  tests-path:
    description: Path to test project e.g. Services/Catalog/Catalog.UnitTests
    required: true
  service-name:
    description: Service name
    required: true
  dotnet-version:
    description: .Net Version
    required: true

# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#runs-for-composite-actions
runs:
  using: "composite"
  steps:

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ inputs.dotnet-version }}

    # https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows
    # https://devblogs.microsoft.com/dotnet/dotnet-loves-github-actions/
    # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net#caching-dependencies
    - name: Cache NuGet Packages
      uses: actions/cache@v4
      if: success()
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-dotnet-nuget

      # https://learn.microsoft.com/en-us/dotnet/core/tools/global-tools
    - name: Restore .NET Tools
      shell: bash
      run: dotnet tool restore

      # Note: `Ubuntu` file and folder names are case-sensitive, be aware about naming them in solution references. because `Windows` file and folder names as case-insensitive.
      # prevent windows case-insensitive for our project with: git config core.ignorecase false; - https://stackoverflow.com/a/27139487/581476
    - name: Restore NuGet packages
      shell: bash
      if: success()
      # restore root solution
      run: |
        echo "üì¶Ô∏è Restoring projects in folder: ${{ inputs.project-path }}"
        find ${{ inputs.project-path }} -name "*.csproj" -exec dotnet restore {} \;
        
        echo "üì¶Ô∏è Restoring test-projects in folder: ${{ inputs.tests-path }}"
        find ${{ inputs.tests-path }} -name "*.csproj" -exec dotnet restore {} \;

    - name: Build Service Without Version
      shell: bash
      if: ${{ success() && inputs.application-version == ''}}
      run: |
        echo "üß± Building projects in folder: ${{ inputs.project-path }}"
        find ${{ inputs.project-path }} -name "*.csproj" -exec dotnet build -c Release --no-restore {} \;
        
        echo "üß± Building test-projects in folder: ${{ inputs.tests-path }}"
        find ${{ inputs.tests-path }} -name "*.csproj" -exec dotnet build -c Release --no-restore {} \;

    - name: Build Service With Version
      shell: bash
      if: ${{ success() && inputs.application-version != ''}}
      run: |
        echo "üß± Building projects in folder: ${{ inputs.project-path }}"
        find ${{ inputs.project-path }} -name "*.csproj" -exec dotnet build -c Release --no-restore \
          -p:Version=${{ inputs.application-version }} \
          -p:InformationalVersion=${{ inputs.application-version }} \
          -p:ApplicationVersion=${{ inputs.application-version }} {} \;
        
        echo "üß± Building test-projects in folder: ${{ inputs.tests-path }}"
        find ${{ inputs.tests-path }} -name "*.csproj" -exec dotnet build -c Release --no-restore \
          -p:Version=${{ inputs.application-version }} \
          -p:InformationalVersion=${{ inputs.application-version }} \
          -p:ApplicationVersion=${{ inputs.application-version }} {} \;