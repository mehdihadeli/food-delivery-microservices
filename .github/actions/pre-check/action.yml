# https://docs.github.com/en/actions/creating-actions/creating-a-composite-action
# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions
# https://doug.sh/posts/using-composite-actions-with-github-actions/
# https://wallis.dev/blog/composite-github-actions

name: "Pre-Check"
description: "Pre Check"

# Input parameters allow you to specify data that the action expects to use during runtime. GitHub stores input parameters as environment variables.(so they are just string)
# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#inputs
inputs:
  dotnet-version:
    description: .Net Version
    required: true
  project-path:
    description: Path to project to test e.g. Services/Catalog/Catalog.API
    required: true
  tests-path:
    description: Path to test project e.g. Services/Catalog/Catalog.UnitTests
    required: true
    
# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#runs-for-composite-actions
runs:
  using: "composite"
  steps:

    - name: Conventional Commits Check
      uses: amannn/action-semantic-pull-request@v5
      # Only run on pull request events
      if: github.event_name == 'pull_request'
      id: check-pull-request-title-conventional-commits
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Job Info
      if: success()
      run: |
        echo "pre-check is successful."
        echo workspace is: ${{ github.workspace }}
        echo "is workflow_dispatch event? ${{ github.event_name == 'workflow_dispatch' }}"
        echo "is push event? ${{ github.event_name == 'push' }}"
        echo "is pull request event? ${{ github.event_name == 'pull_request' }}"
        echo "pull_request.head.ref is: ${{ github.event.pull_request.head.ref }}"
        echo "github.ref_name is: ${{ github.ref_name }}"
        echo "github.ref is: ${{ github.ref }}"
        echo "github.head_ref is: ${{ github.head_ref }}"
        echo "should publish in dispatch mode? ${{ github.event.inputs.should-publish }}"
    
    # https://www.codewrecks.com/post/github/choose-environment-from-branch/
    # https://stackoverflow.com/questions/63117454/how-to-set-workflow-env-variables-depending-on-branch
    # https://hungvu.tech/advanced-github-actions-conditional-workflow
    - name: Set Environment For Branch
      if: success()
      id: environment-name-step
      run: |
        if [[ $GITHUB_REF == 'refs/heads/main' ]]; then
            echo "environment-name=production" >> "$GITHUB_OUTPUT"
        elif [[ $GITHUB_REF == 'refs/heads/develop' ]]; then
            echo "environment-name=develop" >> "$GITHUB_OUTPUT"
        elif [[ $GITHUB_REF == 'refs/heads/preview' ]]; then
            echo "environment-name=staging" >> "$GITHUB_OUTPUT"
        elif [[ $GITHUB_REF == 'refs/heads/beta' ]]; then
            echo "environment-name=staging" >> "$GITHUB_OUTPUT"
        else
            echo "environment-name=develop" >> "$GITHUB_OUTPUT"
        fi
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "18"

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ inputs.dotnet-version }}
    
    - name: Run Format Task
      if: success()
      id: format
      run: |
        echo "ðŸ§¹ Checking format in folder: ${{ inputs.project-path }}"
        dotnet csharpier ${{ inputs.project-path }} --check
        echo "ðŸ§¹ Checking format in folder: ${{ inputs.tests-path }}"
        dotnet csharpier ${{ inputs.tests-path }} --check
       
    - name: Run Style Task
      id: style
      if: success()
      run: |
        echo "ðŸŽ¨ Checking style in folder: ${{ inputs.project-path }}"
        find ${{ inputs.project-path }} -name "*.csproj" -exec dotnet format style {} --verify-no-changes --severity error --verbosity diagnostic \;
        echo "ðŸŽ¨ Checking style in folder: ${{ inputs.tests-path }}"
        find ${{ inputs.tests-path }} -name "*.csproj" -exec dotnet format style {} --verify-no-changes --severity error --verbosity diagnostic \;

    - name: Run Analyzers Task
      if: success()
      run: |
        echo "ðŸ“‚ Running analyzers in folder: ${{ inputs.project-path }}"
        find ${{ inputs.project-path }} -name "*.csproj" -exec dotnet format analyzers {} --verify-no-changes --severity error --verbosity diagnostic \;
        echo "ðŸ“‚ Running analyzers in folder: ${{ inputs.tests-path }}"
        find ${{ inputs.tests-path }} -name "*.csproj" -exec dotnet format analyzers {} --verify-no-changes --severity error --verbosity diagnostic \;