name: Reusable Deployment Workflow

on:
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_call
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_callinputs
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_callinputsinput_idtype
  # https://docs.github.com/en/actions/using-workflows/reusing-workflows
  workflow_call:
    inputs:
      environment:
        type: string
        description: Environment to deploy to
        required: true
      service-name:
        type: string
        description: Service name
        required: true
    secrets:
      ci-github-token:
        required: true
jobs:
  deploy:
    runs-on: ubuntu-latest
    # Deploy to dev, staging (auto) - Deploy to production (requires and waits for approval)
    environment: ${{ inputs.environment }}
    name: Deploy to ${{ inputs.environment }}
    if: |
      (github.event_name != 'pull_request' && contains(fromJson('["main", "preview"]'), github.ref_name) && (github.event_name == 'push'))
    steps:
      - run: echo "Deploying to ${{ inputs.environment }}..."

      - name: create output dir
        shell: bash
        working-directory: ${{ github.workspace }}
        run: mkdir -p "output"

        # https://github.com/actions/download-artifact#download-all-artifacts
        # download artifacts in same workflow (artifacts for before job 'call-build-test-push')
      - name: Download Publish Artifacts
        if: (github.event_name == 'workflow_dispatch' || github.event_name == 'push')
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.service-name }}_publish_artifacts
          path: publish-artifacts

      - name: dir
        if: success()
        shell: bash
        run: ls -R "${{ github.workspace }}/publish-artifacts"

        # https://askubuntu.com/questions/86849/how-to-unzip-a-zip-file-from-the-terminal
      - name: unzip artifacts
        if: success()
        shell: bash
        run: |
          unzip "publish-artifacts/${{inputs.service-name}}.zip" -d "output"

      - name: Ls Output Files
        shell: bash
        if: success()
        run: ls -R ${{ github.workspace }}/output/${{inputs.service-name}}

      - name: Upload Publish Services Artifacts For Deployment Jobs
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: ${{ inputs.service-name}}_publish_artifacts
          path: |
            ${{ github.workspace }}/output/${{inputs.service-name}}.zip
          retention-days: 1 # This will automatically delete the artifact after 1 day
