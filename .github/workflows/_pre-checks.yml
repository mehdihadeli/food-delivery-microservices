name: Pre Checks
on:
  workflow_call:
    inputs:
      tests-path:
        description: Tests path
        required: true
        type: string
      project-path:
        description: Project path
        required: true
        type: string
      dotnet-version:
        description: .Net Version
        required: true
        type: string
    secrets:
      ci-github-token:
        required: true

jobs:
  pre-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Conventional Commits Check
        uses: amannn/action-semantic-pull-request@v5
        # Only run on pull request events
        if: github.event_name == 'pull_request'
        id: check-pull-request-title-conventional-commits
        env:
          GITHUB_TOKEN: ${{ secrets.ci-github-token }}

      - name: Job Info
        if: success()
        shell: bash
        run: |
          echo "pre-check is successful."
          echo environment is: ${{ github.workspace }}
          echo "is workflow_dispatch event? ${{ github.event_name == 'workflow_dispatch' }}"
          echo "is push event? ${{ github.event_name == 'push' }}"
          echo "is pull request event? ${{ github.event_name == 'pull_request' }}"
          echo "pull_request.head.ref is: ${{ github.event.pull_request.head.ref }}"
          echo "github.ref_name is: ${{ github.ref_name }}"
          echo "github.ref is: ${{ github.ref }}"
          echo "github.head_ref is: ${{ github.head_ref }}"
          echo "should publish in dispatch mode? ${{ github.event.inputs.should-publish }}"

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ inputs.dotnet-version }}

      # https://learn.microsoft.com/en-us/dotnet/core/tools/global-tools
      - name: Restore .NET Tools
        shell: bash
        run: dotnet tool restore

      - name: Run Format Task
        if: success()
        shell: bash
        id: format
        run: |
          echo "ðŸ§¹ Checking format in folder: ${{ inputs.project-path }}"
          make check-format ${{ inputs.project-path }}
          echo "ðŸ§¹ Checking format in folder: ${{ inputs.tests-path }}"
          make check-format ${{ inputs.tests-path }}

      - name: Run Style Task
        id: style
        shell: bash
        if: success()
        run: |
          echo "ðŸŽ¨ Checking style in folder: ${{ inputs.project-path }}"
          make check-style ${{ inputs.project-path }}
          echo "ðŸŽ¨ Checking style in folder: ${{ inputs.tests-path }}"
          make check-style ${{ inputs.tests-path }}

      - name: Run Analyzers Task
        if: success()
        shell: bash
        run: |
          echo "ðŸ“‚ Running analyzers in folder: ${{ inputs.project-path }}"
          make check-analyzers ${{ inputs.project-path }}
          echo "ðŸ“‚ Running analyzers in folder: ${{ inputs.tests-path }}"
          make check-analyzers  ${{ inputs.tests-path }}