# Linting workflow: https://github.com/rhysd/actionlint

name: Customers-CI-CD

on:
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#push
  # Runs your workflow when you push a commit or tag.
  push:
    branches:
      # Only main branch pushes
      - main
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#running-your-workflow-only-when-a-push-affects-specific-files
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onpushpull_requestpull_request_targetpathspaths-ignore
    paths:
      - src/Services/Customers/**
      - src/BuildingBlocks/**
      - tests/Services/Customers/**
  pull_request:
    branches:
      # Only PRs targeting main
      - main
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#running-your-workflow-only-when-a-push-affects-specific-files
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onpushpull_requestpull_request_targetpathspaths-ignore
    types: [opened, synchronize, reopened]
    paths:
      - src/Services/Customers/**
      - src/BuildingBlocks/**
      - tests/Services/Customers/**

  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_dispatch
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_dispatchinputs
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#providing-inputs
  # https://github.blog/changelog/2021-11-10-github-actions-input-types-for-manual-workflows/
  # https://docs.github.com/en/actions/managing-workflow-runs/manually-running-a-workflow
  # Allows us to run this workflow manually from the Actions tab
  # To manually trigger a workflow, use the workflow_dispatch event. You can manually trigger a workflow run using the GitHub API, GitHub CLI, or GitHub browser interface
  # Note: To trigger the workflow_dispatch event, our workflow must be in the default branch
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "info"
        type: choice
        options:
          - info
          - warning
          - debug
      publish-production:
        required: true
        default: false
        description: "Publish docker image and artifacts to production"
        type: boolean
      publish-production-release-note:
        required: true
        default: false
        description: "Publish a release note"
        type: boolean
      should-deploy:
        required: true
        default: true
        description: "Should deploy?"
        type: boolean
#     # we don't use this here, I detect environment based on the branch
#     environment:
#       description: "Environment to run"
#       type: environment
#       required: true

# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.sha }}
  cancel-in-progress: true

# https://docs.github.com/en/actions/using-workflows/about-workflows
jobs:
  call-detect-environment:
    uses: ./.github/workflows/_detect-environment.yml
    with:
      publish-production: ${{ github.event.inputs.publish-production || false }}

  call-semantic-version:
    uses: ./.github/workflows/_semantic-version.yml
    needs: [call-detect-environment]
    with:
      environment: ${{ needs.call-detect-environment.outputs.environment }}
      dotnet-version: ${{ vars.DOTNET_VERSION }} # 9.0.*

  call-pre-checks:
    uses: ./.github/workflows/_pre-checks.yml
    needs: [call-detect-environment, call-semantic-version]
    with:
      dotnet-version: ${{ vars.DOTNET_VERSION }} # 9.0.*
    secrets:
      ci-github-token: ${{ secrets.GITHUB_TOKEN }}

  ### CI
  call-build-test-publish:
    needs: [call-pre-checks, call-semantic-version, call-detect-environment]
    # https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idpermissions
    # https://docs.github.com/en/packages/managing-github-packages-using-github-actions-workflows/publishing-and-installing-a-package-with-github-actions#upgrading-a-workflow-that-accesses-ghcrio
    ## https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository
    ## https://docs.github.com/en/actions/using-workflows/reusing-workflows
    permissions:
      contents: read # for publishing in dry-run mode
      checks: write # for test-reporter

    # https://docs.github.com/en/actions/using-workflows/reusing-workflows#calling-a-reusable-workflow
    # https://github.blog/2021-11-29-github-actions-reusable-workflows-is-generally-available/
    uses: ./.github/workflows/_build-test-publish.yml
    # https://docs.github.com/en/actions/using-workflows/reusing-workflows#passing-inputs-and-secrets-to-a-reusable-workflow
    # https://github.blog/changelog/2022-05-03-github-actions-simplify-using-secrets-with-reusable-workflows/
    # https://docs.github.com/en/actions/using-workflows/reusing-workflows#passing-secrets-to-nested-workflows
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idsecretsinherit
    secrets:
      ci-github-token: ${{ secrets.GITHUB_TOKEN }}
    with:
      # https://docs.github.com/en/actions/security-guides/encrypted-secrets
      # https://docs.github.com/en/actions/using-workflows/reusing-workflows#using-inputs-and-secrets-in-a-reusable-workflow
      # https://docs.github.com/en/actions/learn-github-actions/variables
      # https://stackoverflow.com/questions/73305126/passing-env-variable-inputs-to-a-reusable-workflow
      tests-path: ${{ vars.CUSTOMERS_SERVICE_TESTS_PATH }} # tests/Services/Customers
      project-path: ${{ vars.CUSTOMERS_SERVICE_PROJECT_PATH }} # src/Services/Customers
      service-name: ${{ vars.CUSTOMERS_SERVICE_NAME }} # customers-service
      dotnet-version: ${{ vars.DOTNET_VERSION }} # 9.0.*
      no-restore: true
      # we don't set version or we pass `call-semantic-version.outputs.sem-ver`, version will assign using `gitversion` and `msbuild` based on ` GitVersion.MsBuild` package.
      environment: ${{ needs.call-detect-environment.outputs.environment }}

  call-docker-build-push:
    needs:
      [
        call-pre-checks,
        call-semantic-version,
        call-detect-environment,
        call-build-test-publish,
      ]
    permissions:
      packages: write
      contents: read
    if: success()
    uses: ./.github/workflows/_docker-build-push.yml
    with:
      environment: ${{ needs.call-detect-environment.outputs.environment }}
      version: ${{ needs.call-semantic-version.outputs.image-version }}
      service-name: ${{ vars.CUSTOMERS_SERVICE_NAME }} # customers-service
      docker-file-path: ${{ vars.CUSTOMERS_SERVICE_DOCKER_FILE_PATH }} # src/Services/Customers/Dockerfile
      build-context: "."
      dotnet-version: ${{ vars.DOTNET_VERSION }} # 9.0.*
    secrets:
      ci-github-token: ${{ secrets.GITHUB_TOKEN }}
      acr-registry-url: ${{ secrets.ACR_REGISTRY_URL }}
      acr-username: ${{ secrets.ACR_USERNAME }}
      acr-password: ${{ secrets.ACR_PASSWORD }}
      ghcr-token: ${{ secrets.GITHUB_TOKEN }}

  #### CD
  # https://docs.github.com/en/actions/deployment/about-deployments/deploying-with-github-actions
  # https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment
  # https://www.trywilco.com/post/wilco-ci-cd-github-heroku
  # https://limeii.github.io/2022/11/deploy-to-azure-appservice-with-github-actions/
  # https://limeii.github.io/2022/11/deploy-on-multiple-environment-with-github-actions/
  # https://www.codewrecks.com/post/github/choose-environment-from-branch/
  # https://colinsalmcorner.com/musings-on-reusable-workflows/
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_run
  # we could use workflow_run and `completed` event that triggered by CI workflow here, This event will only trigger a workflow run if the workflow file is on the default branch.
  call-deploy:
    needs: [call-pre-checks, call-detect-environment, call-docker-build-push]

    # https://docs.github.com/en/actions/using-workflows/reusing-workflows#calling-a-reusable-workflow
    # https://github.blog/2021-11-29-github-actions-reusable-workflows-is-generally-available/
    uses: ./.github/workflows/_deploy.yml
    # https://docs.github.com/en/actions/using-workflows/reusing-workflows#passing-inputs-and-secrets-to-a-reusable-workflow
    # https://github.blog/changelog/2022-05-03-github-actions-simplify-using-secrets-with-reusable-workflows/
    # https://docs.github.com/en/actions/using-workflows/reusing-workflows#passing-secrets-to-nested-workflows
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idsecretsinherit
    with:
      service-name: ${{ vars.CUSTOMERS_SERVICE_NAME }} # customers-service
      environment: ${{ needs.call-detect-environment.outputs.environment }}
    secrets:
      ci-github-token: ${{ secrets.GITHUB_TOKEN }}
