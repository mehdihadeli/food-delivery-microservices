name: Reusable Build Workflow

on:
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_callinputsinput_idtype
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_callinputs
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_call
  # https://docs.github.com/en/actions/using-workflows/reusing-workflows
  workflow_call:
    inputs:
      tests-path:
        description: Tests path
        required: true
        type: string
      coverage-exclude:
        description: Coverage exclude filter
        default: "[BuildingBlocks.*]*%2c[FoodDelivery.Services.Shared]*"
        type: string
      unit-test-filter:
        description: Unit tests filter
        default: "(Category=Unit&FullyQualifiedName~UnitTests&FullyQualifiedName~FoodDelivery.Services)"
        type: string
      integration-test-filter:
        description: Integration tests filter
        default: "(Category=Integration&FullyQualifiedName~IntegrationTests&FullyQualifiedName~FoodDelivery.Services)|(Category=EndToEnd&FullyQualifiedName~EndToEndTests)"
        type: string
      project-path:
        description: Project path
        required: true
        type: string
      dotnet-version:
        description: .Net Version
        required: true
        type: string
      service-name:
        description: Service name
        required: true
        type: string
      docker-file-path:
        description: Docker file path
        required: true
        type: string

jobs:
  pre-checks:
    runs-on: ubuntu-latest
    continue-on-error: false
      
    # https://itnext.io/automate-your-integration-tests-and-semantic-releases-with-github-actions-43875ad83092
    # https://github.com/actions/runner/issues/491#issuecomment-850884422
    # https://stackoverflow.com/questions/69354003/github-action-job-fire-when-previous-job-skipped
    # we should not filter on head commit message types like 'chore', 'docs' because it is possible it our latest SHA commit in integration branches like develop and main be these types and it will skips whole of our trigger
    if: |
      github.actor != 'dependabot[bot]'
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Call Composite Action pre-check
        uses: ./.github/actions/pre-check
        id: pre-check-step
        with:
          dotnet-version: ${{ inputs.dotnet-version }}
          project-path: ${{ inputs.project-path }}
          tests-path: ${{ inputs.tests-path }}
          token: ${{ secrets.GITHUB_TOKEN }}
          
  build-test:
    # https://github.com/actions/runner-images/blob/main/images/linux/Ubuntu2204-Readme.md
    # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
    runs-on: ubuntu-latest
    needs: [pre-checks]
    #https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstrategyfail-fast
    continue-on-error: false

    # The GITHUB_TOKEN permissions passed from the caller workflow can be only downgraded in called workflow
    permissions:
      contents: read
      checks: write # for test-reporter

    steps:

      # https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
      # The `default working directory` on the runner for `steps`, and the default location of your repository when using the checkout action
      # it is `defualt root path` if we don't specify a working directory
      - name: Ls default workspace for steps
        run: ls -R ${{ github.workspace }}

        # https://docs.github.com/en/actions/learn-github-actions/variables#using-contexts-to-access-variable-values
      - name: Job Info
        run: |
          echo "job name is: ${{ github.job }}"
          echo "actor is: ${{ github.actor }}"
          echo workspace is: ${{ github.workspace }}
          echo "is workflow_dispatch event? ${{ github.event_name == 'workflow_dispatch' }}"
          echo "is push event? ${{ github.event_name == 'push' }}"
          echo "is pull request event? ${{ github.event_name == 'pull_request' }}"
          echo "pull_request.head.ref is: ${{ github.event.pull_request.head.ref }}"
          echo "github.ref_name is: ${{ github.ref_name }}"
          echo "github.ref is: ${{ github.ref }}"
          echo "github.head_ref is: ${{ github.head_ref }}"
          echo "project-path is: ${{ inputs.project-path }}"
          echo "tests-path is: ${{ inputs.tests-path }}"

      # https://github.com/cycjimmy/semantic-release-action/issues/6
      # https://github.com/actions/checkout#push-a-commit-using-the-built-in-token
      # https://stackoverflow.com/questions/750172/how-do-i-change-the-author-and-committer-name-email-for-multiple-commits
      # https://github.com/semantic-release/semantic-release/issues/1208
      # https://github.com/orgs/community/discussions/26560
      # https://blog.pother.ca/github-actions-workflow_run-event/
      # https://stackoverflow.com/questions/63343937/how-to-use-the-github-actions-workflow-run-event
      # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_run
      # https://github.com/semantic-release/semantic-release/blob/b9b5c7689f0acdfdc079c839db0fcf78339745e2/index.js#L92
      ## https://github.com/actions/checkout/issues/439#issuecomment-965968956
      # get latest remote change because sematic-release in `verifyConditions` event checks local branch has latest remote branch changes, for preventing: The local branch `something` is behind the remote one, therefore a new version won't be published.
      # By default checkout@v3, will check branch on ref/SHA that triggered in starting workflow, so if inner a job in the workflow we change HEAD of repository by changing code, subsequent jobs don't get these commits and they get ref/SHA that triggered in starting workflow
      # we can't create a `composite-action` for `checkout` because for finding composite-action locally with relative path, repository should be `checkout` first
      - name: Check out code
        uses: actions/checkout@v4
        with:
          # https://github.com/actions/checkout#fetch-all-history-for-all-tags-and-branches
          # Only a single commit is fetched by default, for the ref/SHA that triggered the workflow. Set fetch-depth: 0 to fetch all history for all branches and tags
          fetch-depth: 0
          repository: ${{ github.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}
          # set ref to 'github.ref' works correctly with both pull_requests event and push event and this is default behavior checkout action when we don't use ref attribute
          ref: ${{ github.ref }}
      - run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
        shell: bash

      - name: Call Composite Action build-test
        uses: ./.github/actions/build-test
        if: success()
        id: build-test-step
        with:
          project-path: ${{ inputs.project-path }}
          tests-path: ${{ inputs.tests-path }}
          unit-test-filter: ${{ inputs.unit-test-filter }}
          integration-test-filter: ${{ inputs.integration-test-filter }}
          coverage-exclude: ${{ inputs.coverage-exclude }}
          # wildcard search for files with the ".cobertura.xml" extension in all subdirectories of the current directory
          # https://www.jamescroft.co.uk/combining-multiple-code-coverage-results-in-azure-devops/
          # https://stackoverflow.com/questions/53255065/dotnet-unit-test-with-coverlet-how-to-get-coverage-for-entire-solution-and-not
          reports-path: ${{ github.workspace }}/**/*.cobertura.xml
          reports-output-path: ${{ github.workspace }}/output/test-results
          service-name: ${{ inputs.service-name }}
          dotnet-version: ${{ inputs.dotnet-version }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Call Composite Action docker-build
        uses: ./.github/actions/docker-build
        if: success()
        id: docker-build-step
        with:
          docker-file-path: ${{ inputs.docker-file-path }}
          service-name: ${{ inputs.service-name }}
