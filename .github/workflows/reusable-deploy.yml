name: Reusable Deployment Workflow

on:
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_call
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_callinputs
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_callinputsinput_idtype
  # https://docs.github.com/en/actions/using-workflows/reusing-workflows
  workflow_call:
    inputs:
      environment-name:
        type: string
        description: Environment to deploy to
        required: true
      release-version:
        type: string
        description: Version
        required: true
      registry-endpoint:
        type: string
        description: Registry endpoint
        default: ${{ github.repository }}
      registry:
        type: string
        description: Registry endpoint
        required: true
      service-name:
        type: string
        description: Service name
        required: true
jobs:

  deploy:
    name: Deploy to ${{ inputs.environment-name }} Environment
    runs-on: ubuntu-latest
    #https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstrategyfail-fast
    continue-on-error: false

    env:
      IMAGE_NAME: ${{ inputs.registry }}/${{ inputs.registry-endpoint }}/${{ inputs.service-name }}:${{ inputs.release-version }}

      # https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment
    environment:
      name: ${{ inputs.environment-name }}
      # url: ${{ steps.deploy-to-heroku.outputs.webapp-url }}

    steps:

    # https://docs.github.com/en/actions/learn-github-actions/variables#using-contexts-to-access-variable-values
    - name: Job Info
      run: |
        echo "job name is: ${{ github.job }}"
        echo "branch name is: ${{ github.ref_name }}"
        echo "environment-name is: ${{ inputs.environment-name }}"
        echo "version is: ${{ inputs.release-version }}"
        echo "service-name is: ${{ inputs.service-name }}"
        echo "registry is: ${{ inputs.registry }}"
        echo "registry-endpoint is: ${{ inputs.registry-endpoint }}"
        echo "release image is: ${{ env.IMAGE_NAME }}"

    - name: Check Inputs
      run: |
        if [ -z ${{ inputs.release-version }} ]
           then echo "version is empty, action cancelled..."
                exit 1
        fi
        if [ -z ${{ inputs.environment-name }} ]
           then echo "environment-name is empty, action cancelled..."
                exit 1
        fi

    # https://github.com/cycjimmy/semantic-release-action/issues/6
    # https://github.com/actions/checkout#push-a-commit-using-the-built-in-token
    # https://stackoverflow.com/questions/750172/how-do-i-change-the-author-and-committer-name-email-for-multiple-commits
    # https://github.com/semantic-release/semantic-release/issues/1208
    # https://github.com/orgs/community/discussions/26560
    # https://blog.pother.ca/github-actions-workflow_run-event/
    # https://stackoverflow.com/questions/63343937/how-to-use-the-github-actions-workflow-run-event
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_run
    # https://github.com/semantic-release/semantic-release/blob/b9b5c7689f0acdfdc079c839db0fcf78339745e2/index.js#L92
    ## https://github.com/actions/checkout/issues/439#issuecomment-965968956
    # get latest remote change because sematic-release in `verifyConditions` event checks local branch has latest remote branch changes, for preventing: The local branch `something` is behind the remote one, therefore a new version won't be published.
    # By default checkout@v3, will check branch on ref/SHA that triggered in starting workflow, so if inner a job in the workflow we change HEAD of repository by changing code, subsequent jobs don't get these commits and they get ref/SHA that triggered in starting workflow
    # we can't create a `composite-action` for `checkout` because for finding composite-action locally with relative path, repository should be `checkout` first
    - name: Check out code
      uses: actions/checkout@v4
      with:
        # https://github.com/actions/checkout#fetch-all-history-for-all-tags-and-branches
        # Only a single commit is fetched by default, for the ref/SHA that triggered the workflow. Set fetch-depth: 0 to fetch all history for all branches and tags
        fetch-depth: 0
        repository: ${{ github.repository }}
        token: ${{ secrets.GITHUB_TOKEN }}
        # set ref to 'github.ref' works correctly with both pull_requests event and push event and this is default behavior checkout action when we don't use ref attribute
        ref: ${{ github.ref }}
    - run: |
        git config user.name 'github-actions[bot]'
        git config user.email 'github-actions[bot]@users.noreply.github.com'
      shell: bash

#    - name: Call Composite Action deploy-azure-image
#        uses: ./.github/actions/deploy-azure-image
#        id: deploy-azure-image-step
#        with:
#          resource-group:
#          service-name: ${{ inputs.service-name }}
#          image: ${{ env.IMAGE_NAME }}"
#          azure-creds:
#          env-secret:

    - name: Call Composite Action deploy-azure
      uses: ./.github/actions/deploy-azure
      id: deploy-azure-step
      with:
        service-name: ${{ inputs.service-name }}
        azure-creds: "1"
        token: ${{ secrets.GITHUB_TOKEN }}

#    - name: Deploy Helms to AKS
#      run: echo "AKS"
