{
  "id": "food-delivery-microservices",
  "realm": "food-delivery-microservices",
  "accessTokenLifespan": 3600,
  "defaultRole": {
    "name": "default-roles-food-delivery-microservices",
    "description": "${role_default-roles}",
    "composite": false,
    "clientRole": false,
    "containerId": "food-delivery-microservices"
  },
  "enabled": true,
  "users": [
    {
      "username": "app-admin",
      "enabled": true,
      "email": "app-admin-506657C6-4FD9-4A01-870E-3A72AFFFD8A6@local-test-keycloak.com",
      "emailVerified": true,
      "firstName": "App",
      "lastName": "Admin",
      "attributes": {
        "access": {
          "catalogs": [
            "catalogs.read",
            "catalogs.write"
          ],
          "users": [
            "users.read",
            "users.write"
          ],
          "customers": [
            "customers.read",
            "customers.write"
          ],
          "orders": [
            "orders.read",
            "orders.write"
          ]
        }
      },
      "credentials": [
        {
          "type": "password",
          "value": "${APP_ADMIN_PASSWORD}"
        }
      ],
      "realmRoles": [
        "admin"
      ],
      "clientRoles": {
        "users-microservice-client": [
          "users:read",
          "users:write"
        ],
        "customers-microservice-client": [
          "customers:read",
          "customers:write"
        ],
        "catalogs-microservice-client": [
          "catalogs:read",
          "catalogs:write"
        ],
        "orders-microservice-client": [
          "orders:read",
          "orders:write"
        ]
      }
    },
    {
      "username": "app-user",
      "enabled": true,
      "email": "app-user-937979D3-3FA0-41F9-A459-71D454D0B5EA@local-test-keycloak.com",
      "emailVerified": true,
      "firstName": "App",
      "lastName": "User",
      "attributes": {
        "access": {
          "catalogs": [
            "catalogs.read"
          ],
          "users": [
            "users.read"
          ],
          "customers": [
            "customers.read"
          ],
          "orders": [
            "orders.read"
          ]
        }
      },
      "credentials": [
        {
          "type": "password",
          "value": "${USER_PASSWORD}"
        }
      ],
      "realmRoles": [
        "customer"
      ],
      "clientRoles": {
        "users-microservice-client": [
          "users:read"
        ],
        "customers-microservice-client": [
          "customers:read"
        ],
        "catalogs-microservice-client": [
          "catalogs:read"
        ],
        "orders-microservice-client": [
          "orders:read"
        ]
      }
    },
    {
      "username": "service-account-orders-microservice-client",
      "enabled": true,
      "serviceAccountClientId": "orders-microservice-client",
      "realmRoles": [
      ],
      "clientRoles": {
        "orders-microservice-client": [
          "orders:read",
          "orders:write",
          "orders:read-write"
        ]
      }
    },
    {
      "username": "service-account-customers-microservice-client",
      "enabled": true,
      "serviceAccountClientId": "customers-microservice-client",
      "realmRoles": [
      ],
      "clientRoles": {
        "customers-microservice-client": [
          "customers:read",
          "customers:write",
          "customers:read-write"
        ]
      }
    },
    {
      "username": "service-account-users-microservice-client",
      "enabled": true,
      "serviceAccountClientId": "users-microservice-client",
      "realmRoles": [
      ],
      "clientRoles": {
        "users-microservice-client": [
          "users:read",
          "users:write",
          "users:read-write"
        ]
      }
    },
    {
      "username": "service-account-catalogs-microservice-client",
      "enabled": true,
      "serviceAccountClientId": "catalogs-microservice-client",
      "realmRoles": [
      ],
      "clientRoles": {
        "catalogs-microservice-client": [
          "catalogs:read",
          "catalogs:write",
          "catalogs:read-write"
        ]
      }
    }
  ],
  "roles": {
    "realm": [
      {
        "name": "admin",
        "description": "System administrator with full access"
      },
      {
        "name": "restaurant_owner",
        "description": "Restaurant management access"
      },
      {
        "name": "delivery_driver",
        "description": "Delivery driver access"
      },
      {
        "name": "customer",
        "description": "Basic customer access"
      }
    ],
    "client": {
      "catalogs-microservice-client": [
        {
          "name": "catalogs:read",
          "description": "Read access to catalogs"
        },
        {
          "name": "catalogs:write",
          "description": "Write access to catalogs"
        },
        {
          "name": "catalogs:read-write",
          "description": "Read and write access to catalogs",
          "composite": true,
          "composites": {
            "client": {
              "catalogs-microservice-client": [
                "catalogs:write",
                "catalogs:read"
              ]
            }
          },
          "clientRole": true,
          "attributes": {}
        }
      ],
      "users-microservice-client": [
        {
          "name": "users:read",
          "description": "Read access to users"
        },
        {
          "name": "users:write",
          "description": "Write access to users"
        },
        {
          "name": "users:read-write",
          "description": "Read and write access to users",
          "composite": true,
          "composites": {
            "client": {
              "users-microservice-client": [
                "users:write",
                "users:read"
              ]
            }
          },
          "clientRole": true,
          "attributes": {}
        }
      ],
      "customers-microservice-client": [
        {
          "name": "customers:read",
          "description": "Read access to customers"
        },
        {
          "name": "customers:write",
          "description": "Write access to customers"
        },
        {
          "name": "customers:read-write",
          "description": "Read and write access to customers",
          "composite": true,
          "composites": {
            "client": {
              "customers-microservice-client": [
                "customers:write",
                "customers:read"
              ]
            }
          },
          "clientRole": true,
          "attributes": {}
        }
      ],
      "orders-microservice-client": [
        {
          "name": "orders:read",
          "description": "Read access to orders"
        },
        {
          "name": "orders:write",
          "description": "Write access to orders"
        },
        {
          "name": "orders:read-write",
          "description": "Read and write access to orders",
          "composite": true,
          "composites": {
            "client": {
              "orders-microservice-client": [
                "orders:write",
                "orders:read"
              ]
            }
          },
          "clientRole": true,
          "attributes": {}
        }
      ]
    }
  },
  "clients": [
    {
      "clientId": "test-resource-owner-password-client",
      "name": "test_resource_owner_password_client",
      "enabled": true,
      "publicClient": false,
      "secret": "${TEST_RESOURCE_OWNER_CLIENT_SECRET}",
      "serviceAccountsEnabled": false,
      "authorizationServicesEnabled": true,
      "directAccessGrantsEnabled": true,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "redirectUris": [],
      "webOrigins": [],
      "attributes": {
        "client_credentials.use_refresh_token": "false"
      }
    },
    {
      "clientId": "test-client-credentials-client",
      "name": "test_client_credentials_client",
      "enabled": true,
      "publicClient": false,
      "secret": "${TEST_CLIENT_CREDENTIALS_SECRET}",
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "directAccessGrantsEnabled": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "redirectUris": [],
      "webOrigins": [],
      "attributes": {
        "client_credentials.use_refresh_token": "false"
      }
    },
    {
      "clientId": "app-client-credentials-client",
      "name": "app_client_credentials_client",
      "enabled": true,
      "publicClient": false,
      "secret": "${APP_CLIENT_CREDENTIALS_SECRET}",
      "serviceAccountsEnabled": true,
      "directAccessGrantsEnabled": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "redirectUris": [],
      "webOrigins": [],
      "attributes": {
        "client_credentials.use_refresh_token": "false"
      },
      "defaultClientScopes": [
        "basic",
        "profile",
        "email",
        "roles"
      ]
    },
    {
      "clientId": "implicit-flow-client",
      "name": "implicit_flow_client",
      "enabled": true,
      "publicClient": true,
      "serviceAccountsEnabled": false,
      "authorizationServicesEnabled": false,
      "directAccessGrantsEnabled": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": true,
      "defaultRoles": [
        "default-roles-food-delivery-microservices"
      ],
      "redirectUris": [
        "http://localhost:3000/*"
      ],
      "webOrigins": [
        "http://localhost:3000"
      ],
      "attributes": {
        "client_credentials.use_refresh_token": "false"
      },
      "protocolMappers": [
        {
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "name": "Audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "implicit-flow-client",
            "id.token.claim": "false",
            "access.token.claim": "true"
          }
        },
        {
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "basic",
        "profile",
        "email",
        "roles"
      ]
    },
    {
      "clientId": "gateway-bff-client",
      "enabled": true,
      "publicClient": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "${API_GATEWAY_CLIENT_SECRET}",
      "serviceAccountsEnabled": false,
      "authorizationServicesEnabled": true,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "protocolMappers": [
        {
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "name": "Audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "gateway-bff-client",
            "id.token.claim": "false",
            "access.token.claim": "true"
          }
        },
        {
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "basic",
        "profile",
        "email",
        "roles"
      ],
      "authorizationSettings": {
        "policyEnforcementMode": "ENFORCING",
        "resources": [
          {
            "name": "catalogs",
            "uris": [
              "/products/{id}",
              "/products",
              "/categories/{id}",
              "/categories"
            ],
            "scopes": [
              {
                "name": "catalogs.read"
              },
              {
                "name": "catalogs.write"
              }
            ]
          },
          {
            "name": "customers",
            "scopes": [
              {
                "name": "customers.read"
              },
              {
                "name": "customers.write"
              }
            ]
          },
          {
            "name": "users",
            "scopes": [
              {
                "name": "users.read"
              },
              {
                "name": "users.write"
              }
            ]
          },
          {
            "name": "orders",
            "scopes": [
              {
                "name": "orders.read"
              },
              {
                "name": "orders.write"
              }
            ]
          }
        ],
        "policies": [
          {
            "id": "resource-based-policy",
            "name": "Resource-Based Policy",
            "type": "resource",
            "logic": "POSITIVE",
            "decisionStrategy": "AFFIRMATIVE",
            "resources": [
              "catalogs",
              "users",
              "customers",
              "orders"
            ],
            "config": {
              "roles": "[{\"id\":\"admin\",\"required\":true}]"
            }
          },
          {
            "id": "scope-based-policy",
            "name": "Scope-Based Policy",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "AFFIRMATIVE",
            "scopes": [
              "catalogs.read",
              "catalogs.write",
              "users.read",
              "users.write",
              "customers.read",
              "customers.write",
              "orders.read",
              "orders.write"
            ],
            "config": {
              "roles": "[{\"id\":\"admin\",\"required\":true}]"
            }
          },
          {
            "id": "admin-policy",
            "name": "admin-policy",
            "type": "role",
            "config": {
              "roles": "[{\"id\":\"admin\",\"required\":true}]"
            }
          },
          {
            "id": "customer-policy",
            "name": "customer-policy",
            "type": "role",
            "config": {
              "roles": "[{\"id\":\"customer\",\"required\":true}]"
            }
          },
          {
            "id": "restaurant-owner-policy",
            "name": "restaurant-owner-policy",
            "type": "role",
            "config": {
              "roles": "[{\"id\":\"restaurant_owner\",\"required\":true}]"
            }
          },
          {
            "id": "delivery-driver-policy",
            "name": "delivery-driver-policy",
            "type": "role",
            "config": {
              "roles": "[{\"id\":\"delivery_driver\",\"required\":true}]"
            }
          },
          {
            "id": "catalogs-read-permission",
            "name": "catalogs-read-permission",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"catalogs\"]",
              "scopes": "[\"catalogs.read\"]",
              "applyPolicies": "[\"admin-policy\", \"customer-policy\"]"
            }
          },
          {
            "id": "catalogs-write-permission",
            "name": "catalogs-write-permission",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"catalogs\"]",
              "scopes": "[\"catalogs.write\"]",
              "applyPolicies": "[\"admin-policy\"]"
            }
          },
          {
            "id": "app-admin-policy",
            "name": "app-admin-policy",
            "type": "user",
            "config": {
              "users": "[\"app-admin\"]"
            }
          }
        ],
        "scopes": [
          {
            "name": "catalogs:read",
            "iconUri": ""
          },
          {
            "name": "catalogs:write",
            "iconUri": ""
          }
        ],
        "decisionStrategy": "UNANIMOUS"
      }
    },
    {
      "clientId": "spa-pkce-client",
      "name": "SPA PKCE Client",
      "enabled": true,
      "publicClient": true,
      "serviceAccountsEnabled": false,
      "authorizationServicesEnabled": false,
      "directAccessGrantsEnabled": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "defaultRoles": [
        "default-roles-food-delivery-microservices"
      ],
      "redirectUris": [
        "http://localhost:3000/*"
      ],
      "webOrigins": [
        "http://localhost:3000"
      ],
      "attributes": {
        "client_credentials.use_refresh_token": "false"
      },
      "protocolMappers": [
        {
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "name": "Audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "spa-pkce-client",
            "id.token.claim": "false",
            "access.token.claim": "true"
          }
        },
        {
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "basic",
        "profile",
        "email",
        "roles"
      ]
    },
    {
      "clientId": "users-microservice-client",
      "name": "Users Microservice",
      "enabled": true,
      "publicClient": false,
      "secret": "${USERS_MICROSERVICE_CLIENT_SECRET}",
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "directAccessGrantsEnabled": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "redirectUris": [],
      "webOrigins": [],
      "attributes": {
        "client_credentials.use_refresh_token": "false"
      },
      "protocolMappers": [
        {
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "name": "Audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "users-microservice-client",
            "id.token.claim": "false",
            "access.token.claim": "true"
          }
        },
        {
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "basic",
        "profile",
        "email",
        "roles",
        "users-scope"
      ]
    },
    {
      "clientId": "customers-microservice-client",
      "name": "Customers Microservice",
      "enabled": true,
      "publicClient": false,
      "secret": "${CUSTOMERS_MICROSERVICE_CLIENT_SECRET}",
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "directAccessGrantsEnabled": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "redirectUris": [],
      "webOrigins": [],
      "attributes": {
        "client_credentials.use_refresh_token": "false"
      },
      "protocolMappers": [
        {
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "name": "Audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "customers-microservice-client",
            "id.token.claim": "false",
            "access.token.claim": "true"
          }
        },
        {
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "basic",
        "profile",
        "email",
        "roles",
        "customers-scope"
      ],
      "optionalClientScopes": [
        "customers-users-service-scope"
      ]
    },
    {
      "clientId": "catalogs-microservice-client",
      "name": "Catalogs Microservice",
      "enabled": true,
      "publicClient": false,
      "secret": "${CATALOGS_MICROSERVICE_CLIENT_SECRET}",
      "serviceAccountsEnabled": false,
      "authorizationServicesEnabled": true,
      "directAccessGrantsEnabled": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "redirectUris": [],
      "webOrigins": [],
      "attributes": {
        "client_credentials.use_refresh_token": "false"
      },
      "protocolMappers": [
        {
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "name": "Audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "catalogs-microservice-client",
            "id.token.claim": "false",
            "access.token.claim": "true"
          }
        },
        {
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "basic",
        "profile",
        "email",
        "roles",
        "catalogs-scope"
      ],
      "optionalClientScopes": [
        "catalogs-users-service-scope"
      ]
    },
    {
      "clientId": "orders-microservice-client",
      "name": "Orders Microservice",
      "enabled": true,
      "publicClient": false,
      "secret": "${ORDERS_MICROSERVICE_CLIENT_SECRET}",
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "directAccessGrantsEnabled": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "redirectUris": [],
      "webOrigins": [],
      "attributes": {
        "client_credentials.use_refresh_token": "false"
      },
      "protocolMappers": [
        {
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "name": "Audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "orders-microservice-client",
            "id.token.claim": "false",
            "access.token.claim": "true"
          }
        },
        {
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "basic",
        "profile",
        "email",
        "roles",
        "orders-scope"
      ],
      "optionalClientScopes": [
        "orders-customers-service-scope"
      ]
    }
  ],
  "clientScopes": [
    {
      "name": "basic",
      "description": "OpenID Connect scope for add all basic claims to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "name": "sub",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-sub-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "name": "auth_time",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "AUTH_TIME",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "auth_time",
            "jsonType.label": "long"
          }
        }
      ]
    },
    {
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "name": "organization",
      "description": "Additional claims about the organization a subject belongs to",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${organizationScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "name": "organization",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-organization-membership-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "organization",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false",
        "gui.order": "",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "false",
            "user.attribute": "realmRoles",
            "id.token.claim": "false",
            "lightweight.claim": "true",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String"
          }
        },
        {
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "clientId": "orders-microservice-client",
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "false",
            "user.attribute": "clientRoles",
            "id.token.claim": "false",
            "lightweight.claim": "true",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String"
          }
        },
        {
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "name": "service_account",
      "description": "Specific scope for a client enabled for service accounts",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        },
        {
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "name": "users-scope",
      "description": "",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false",
        "gui.order": ""
      },
      "protocolMappers": [
        {
          "name": "access",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-hardcoded-claim-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "claim.value": "[\"users.read\", \"users.write\"]",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "lightweight.claim": "true",
            "access.token.claim": "true",
            "claim.name": "access.users",
            "jsonType.label": "JSON",
            "access.tokenResponse.claim": "true"
          }
        },
        {
          "name": "service_name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-hardcoded-claim-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "claim.value": "users_service",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "lightweight.claim": "true",
            "access.token.claim": "true",
            "claim.name": "service_name",
            "jsonType.label": "String",
            "access.tokenResponse.claim": "true"
          }
        }
      ]
    },
    {
      "name": "catalogs-scope",
      "description": "",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false",
        "gui.order": ""
      },
      "protocolMappers": [
        {
          "name": "access",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-hardcoded-claim-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "claim.value": "[\"catalogs.read\", \"catalogs.write\" ] ",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "lightweight.claim": "true",
            "access.token.claim": "true",
            "claim.name": "access.catalogs",
            "jsonType.label": "JSON",
            "access.tokenResponse.claim": "true"
          }
        },
        {
          "name": "service_name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-hardcoded-claim-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "claim.value": "catalogs_service",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "lightweight.claim": "true",
            "access.token.claim": "true",
            "claim.name": "service_name",
            "jsonType.label": "String",
            "access.tokenResponse.claim": "true"
          }
        }
      ]
    },
    {
      "name": "catalogs-users-service-scope",
      "description": "",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "name": "catalogs-users-read-role",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-hardcoded-role-mapper",
          "consentRequired": false,
          "config": {
            "role": "users-microservice-client.users:read"
          }
        },
        {
          "name": "users-access",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-hardcoded-claim-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "claim.value": "users.read",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "lightweight.claim": "true",
            "access.token.claim": "true",
            "claim.name": "access.users",
            "jsonType.label": "String",
            "access.tokenResponse.claim": "true"
          }
        }
      ]
    },
    {
      "name": "customers-scope",
      "description": "",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false",
        "gui.order": ""
      },
      "protocolMappers": [
        {
          "name": "access",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-hardcoded-claim-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "claim.value": "[\"customers.read\", \"customers.write\"] ",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "lightweight.claim": "true",
            "access.token.claim": "true",
            "claim.name": "access.customers",
            "jsonType.label": "JSON",
            "access.tokenResponse.claim": "true"
          }
        },
        {
          "name": "service_name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-hardcoded-claim-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "claim.value": "customers_service",
            "userinfo.token.claim": "true",
            "id.token.claim": "false",
            "lightweight.claim": "false",
            "access.token.claim": "true",
            "claim.name": "service_name",
            "jsonType.label": "String",
            "access.tokenResponse.claim": "true"
          }
        }
      ]
    },
    {
      "name": "customers-users-service-scope",
      "description": "",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "name": "customers-users-read-role",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-hardcoded-role-mapper",
          "consentRequired": false,
          "config": {
            "role": "users-microservice-client.users:read"
          }
        },
        {
          "name": "users-access",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-hardcoded-claim-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "claim.value": "users.read",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "lightweight.claim": "true",
            "access.token.claim": "true",
            "claim.name": "access.users",
            "jsonType.label": "String",
            "access.tokenResponse.claim": "true"
          }
        }
      ]
    },
    {
      "name": "orders-scope",
      "description": "",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false",
        "gui.order": ""
      },
      "protocolMappers": [
        {
          "name": "access",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-hardcoded-claim-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "claim.value": "[\"orders.read\", \"orders.write\"]",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "lightweight.claim": "true",
            "access.token.claim": "true",
            "claim.name": "access.orders",
            "jsonType.label": "JSON",
            "access.tokenResponse.claim": "true"
          }
        },
        {
          "name": "service_name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-hardcoded-claim-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "claim.value": "orders_service",
            "userinfo.token.claim": "true",
            "id.token.claim": "false",
            "lightweight.claim": "false",
            "access.token.claim": "true",
            "claim.name": "service_name",
            "jsonType.label": "String",
            "access.tokenResponse.claim": "true"
          }
        }
      ]
    },
    {
      "name": "orders-customers-service-scope",
      "description": "",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "name": "orders-customers-read-role",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-hardcoded-role-mapper",
          "consentRequired": false,
          "config": {
            "role": "customers-microservice-client.customers:read"
          }
        },
        {
          "name": "customers-access",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-hardcoded-claim-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "claim.value": "customers.read",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "lightweight.claim": "true",
            "access.token.claim": "true",
            "claim.name": "access.customers",
            "jsonType.label": "String",
            "access.tokenResponse.claim": "true"
          }
        }
      ]
    },
    {
      "id": "d13f3963-76ba-4365-acb1-d983167e4749",
      "name": "user-attributes",
      "description": "",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false",
        "gui.order": "",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "name": "user_access",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "access",
            "id.token.claim": "true",
            "lightweight.claim": "false",
            "access.token.claim": "true",
            "claim.name": "user_access",
            "jsonType.label": "JSON"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "basic"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "organization"
  ],
  "requiredCredentials": [
    "password"
  ],
  "registrationEmailAsUsername": false,
  "editUsernameAllowed": true,
  "emailTheme": "keycloak",
  "loginTheme": "keycloak.v2",
  "adminTheme": "keycloak.v2",
  "accountTheme": "keycloak.v3",
  "smtpServer": {},
  "rememberMe": true,
  "resetPasswordAllowed": true,
  "registrationAllowed": true,
  "verifyEmail": true
}
