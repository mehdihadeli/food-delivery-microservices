{
  "openapi": "3.0.1",
  "info": {
    "title": "Identity Service",
    "description": "Identity.Service Api<h4>Additional Information</h4>",
    "contact": {
      "name": "test",
      "email": "test@test.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "1.0"
  },
  "paths": {
    "/api/v1/identity/user-role": {
      "get": {
        "tags": [
          "Identity"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnonymousTypeOfstring"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "gateway",
              "info",
              "roles"
            ]
          }
        ]
      }
    },
    "/api/v1/identity/admin-role": {
      "get": {
        "tags": [
          "Identity"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnonymousTypeOfstring"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "gateway",
              "info",
              "roles"
            ]
          }
        ]
      }
    },
    "/api/v1/identity/login": {
      "post": {
        "tags": [
          "Identity"
        ],
        "summary": "Login",
        "description": "Login",
        "operationId": "Login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/identity/logout": {
      "post": {
        "tags": [
          "Identity"
        ],
        "summary": "Logout",
        "description": "Logout",
        "operationId": "Logout",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HttpContext"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "gateway",
              "info",
              "roles"
            ]
          }
        ]
      }
    },
    "/api/v1/identity/send-email-verification-code": {
      "post": {
        "tags": [
          "Identity"
        ],
        "summary": "Send email verification code",
        "description": "Send email verification code",
        "operationId": "SendEmailVerificationCode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailVerificationCodeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/identity/verify-email": {
      "post": {
        "tags": [
          "Identity"
        ],
        "summary": "Verify email",
        "description": "Verify email",
        "operationId": "VerifyEmail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/identity/refresh-token": {
      "post": {
        "tags": [
          "Identity"
        ],
        "summary": "Refresh token",
        "description": "Refresh token",
        "operationId": "RefreshToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "gateway",
              "info",
              "roles"
            ]
          }
        ]
      }
    },
    "/api/v1/identity/revoke-refresh-token": {
      "post": {
        "tags": [
          "Identity"
        ],
        "summary": "Revoke refresh token",
        "description": "Revoke refresh token",
        "operationId": "RevokeRefreshToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RevokeRefreshTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "gateway",
              "info",
              "roles"
            ]
          }
        ]
      }
    },
    "/api/v1/identity/revoke-token": {
      "post": {
        "tags": [
          "Identity"
        ],
        "summary": "Revoke access token",
        "description": "Revoke access token",
        "operationId": "RevokeAccessToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RevokeAccessTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "gateway",
              "info",
              "roles"
            ]
          }
        ]
      }
    },
    "/api/v1/identity/claims": {
      "get": {
        "tags": [
          "Identity"
        ],
        "summary": "Get claims",
        "description": "Get claims",
        "operationId": "GetClaims",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetClaimsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "gateway",
              "info",
              "roles"
            ]
          }
        ]
      }
    },
    "/api/v1/identity/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Register user",
        "description": "Register user",
        "operationId": "RegisterUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get users",
        "description": "Get users",
        "operationId": "GetUsers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "gateway",
              "info",
              "roles"
            ]
          }
        ]
      }
    },
    "/api/v1/identity/users/{userId}/state": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user state",
        "description": "Update user state",
        "operationId": "UpdateUserState",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserStateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/identity/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by id",
        "description": "Get user by id",
        "operationId": "GetUserById",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserByIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/identity/users/by-email/{email}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by email",
        "description": "Get user by email",
        "operationId": "GetUserByEmail",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserByEmailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddressFamily": {
        "enum": [
          "Unspecified",
          "Unix",
          "InterNetwork",
          "ImpLink",
          "Pup",
          "Chaos",
          "NS",
          "Ipx",
          "Iso",
          "Osi",
          "Ecma",
          "DataKit",
          "Ccitt",
          "Sna",
          "DecNet",
          "DataLink",
          "Lat",
          "HyperChannel",
          "AppleTalk",
          "NetBios",
          "VoiceView",
          "FireFox",
          "Banyan",
          "Atm",
          "InterNetworkV6",
          "Cluster",
          "Ieee12844",
          "Irda",
          "NetworkDesigners",
          "Max",
          "Packet",
          "ControllerAreaNetwork",
          "Unknown"
        ],
        "type": "string"
      },
      "AnonymousTypeOfstring": {
        "required": [
          "role"
        ],
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AsnEncodedData": {
        "type": "object",
        "properties": {
          "oid": {
            "$ref": "#/components/schemas/Oid"
          },
          "rawData": {
            "type": "string",
            "format": "byte"
          }
        }
      },
      "AsymmetricAlgorithm": {
        "type": "object",
        "properties": {
          "keySize": {
            "type": "integer",
            "format": "int32"
          },
          "legalKeySizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeySizes"
            }
          },
          "signatureAlgorithm": {
            "type": "string"
          },
          "keyExchangeAlgorithm": {
            "type": "string"
          }
        }
      },
      "CancellationToken": {
        "type": "object",
        "properties": {
          "isCancellationRequested": {
            "type": "boolean"
          },
          "canBeCanceled": {
            "type": "boolean"
          },
          "waitHandle": {
            "$ref": "#/components/schemas/WaitHandle"
          }
        }
      },
      "Claim": {
        "type": "object",
        "properties": {
          "issuer": {
            "type": "string"
          },
          "originalIssuer": {
            "type": "string"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "subject": {
            "$ref": "#/components/schemas/ClaimsIdentity"
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "valueType": {
            "type": "string"
          }
        }
      },
      "ClaimDto": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "ClaimsIdentity": {
        "type": "object",
        "properties": {
          "authenticationType": {
            "type": "string"
          },
          "isAuthenticated": {
            "type": "boolean"
          },
          "actor": {
            "$ref": "#/components/schemas/ClaimsIdentity"
          },
          "bootstrapContext": { },
          "claims": {
            "$ref": "#/components/schemas/#/properties/request/properties/httpContext/properties/response/properties/httpContext/properties/user/properties/claims/items/properties/subject/properties/actor/properties/claims"
          },
          "label": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "nameClaimType": {
            "type": "string"
          },
          "roleClaimType": {
            "type": "string"
          }
        }
      },
      "ClaimsPrincipal": {
        "type": "object",
        "properties": {
          "claims": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Claim"
            }
          },
          "identities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClaimsIdentity"
            }
          },
          "identity": {
            "$ref": "#/components/schemas/IIdentity"
          }
        }
      },
      "ConnectionInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "remoteIpAddress": {
            "$ref": "#/components/schemas/IPAddress"
          },
          "remotePort": {
            "type": "integer",
            "format": "int32"
          },
          "localIpAddress": {
            "$ref": "#/components/schemas/IPAddress"
          },
          "localPort": {
            "type": "integer",
            "format": "int32"
          },
          "clientCertificate": {
            "$ref": "#/components/schemas/X509Certificate2"
          }
        }
      },
      "GetClaimsResponse": {
        "required": [
          "claims"
        ],
        "type": "object",
        "properties": {
          "claims": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClaimDto"
            },
            "nullable": true
          }
        }
      },
      "GetUserByEmailResponse": {
        "required": [
          "userIdentity"
        ],
        "type": "object",
        "properties": {
          "userIdentity": {
            "$ref": "#/components/schemas/IdentityUserDto"
          }
        }
      },
      "GetUserByIdResponse": {
        "required": [
          "userIdentity"
        ],
        "type": "object",
        "properties": {
          "userIdentity": {
            "$ref": "#/components/schemas/IdentityUserDto"
          }
        }
      },
      "GetUsersResponse": {
        "required": [
          "identityUsers"
        ],
        "type": "object",
        "properties": {
          "identityUsers": {
            "$ref": "#/components/schemas/IPageListOfIdentityUserDto"
          }
        }
      },
      "HostString": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "hasValue": {
            "type": "boolean"
          },
          "host": {
            "type": "string"
          },
          "port": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "HttpContext": {
        "type": "object",
        "properties": {
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValuePairOfTypeAndObject"
            }
          },
          "request": {
            "$ref": "#/components/schemas/HttpRequest"
          },
          "response": {
            "$ref": "#/components/schemas/#/properties/request/properties/httpContext/properties/response"
          },
          "connection": {
            "$ref": "#/components/schemas/#/properties/request/properties/httpContext/properties/response/properties/httpContext/properties/connection"
          },
          "webSockets": {
            "$ref": "#/components/schemas/#/properties/request/properties/httpContext/properties/response/properties/httpContext/properties/webSockets"
          },
          "user": {
            "$ref": "#/components/schemas/#/properties/request/properties/httpContext/properties/response/properties/httpContext/properties/user"
          },
          "items": {
            "$ref": "#/components/schemas/#/properties/request/properties/httpContext/properties/response/properties/httpContext/properties/items"
          },
          "requestServices": {
            "$ref": "#/components/schemas/#/properties/request/properties/httpContext/properties/response/properties/httpContext/properties/requestServices"
          },
          "requestAborted": {
            "$ref": "#/components/schemas/#/properties/request/properties/httpContext/properties/response/properties/httpContext/properties/requestAborted"
          },
          "traceIdentifier": {
            "type": "string"
          },
          "session": {
            "$ref": "#/components/schemas/#/properties/request/properties/httpContext/properties/response/properties/httpContext/properties/session"
          }
        }
      },
      "HttpRequest": {
        "type": "object",
        "properties": {
          "httpContext": {
            "$ref": "#/components/schemas/HttpContext"
          },
          "method": {
            "type": "string"
          },
          "scheme": {
            "type": "string"
          },
          "isHttps": {
            "type": "boolean"
          },
          "host": {
            "$ref": "#/components/schemas/HostString"
          },
          "pathBase": {
            "$ref": "#/components/schemas/PathString"
          },
          "path": {
            "$ref": "#/components/schemas/PathString"
          },
          "queryString": {
            "$ref": "#/components/schemas/QueryString"
          },
          "query": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValuePairOfstringAndStringValues"
            }
          },
          "protocol": {
            "type": "string"
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/#/properties/request/properties/httpContext/properties/response/properties/headers/additionalProperties"
            }
          },
          "cookies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValuePairOfstringAndstring"
            }
          },
          "contentLength": {
            "type": "integer",
            "format": "int64"
          },
          "contentType": {
            "type": "string"
          },
          "body": {
            "$ref": "#/components/schemas/Stream"
          },
          "bodyReader": {
            "$ref": "#/components/schemas/PipeReader"
          },
          "hasFormContentType": {
            "type": "boolean"
          },
          "form": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/#/properties/request/properties/query/items"
            }
          },
          "routeValues": {
            "type": "object"
          }
        }
      },
      "HttpResponse": {
        "type": "object",
        "properties": {
          "httpContext": {
            "$ref": "#/components/schemas/HttpContext"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "body": {
            "$ref": "#/components/schemas/Stream"
          },
          "bodyWriter": {
            "$ref": "#/components/schemas/PipeWriter"
          },
          "contentLength": {
            "type": "integer",
            "format": "int64"
          },
          "contentType": {
            "type": "string"
          },
          "cookies": {
            "$ref": "#/components/schemas/IResponseCookies"
          },
          "hasStarted": {
            "type": "boolean"
          }
        }
      },
      "HttpValidationProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "detail": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "IdentityUserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "lastLoggedInAt": {
            "type": "string",
            "format": "date-time"
          },
          "refreshTokens": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "userState": {
            "$ref": "#/components/schemas/UserState"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "nullable": true
      },
      "IdentityUserDto2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "lastLoggedInAt": {
            "type": "string",
            "format": "date-time"
          },
          "refreshTokens": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "userState": {
            "$ref": "#/components/schemas/UserState"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "IIdentity": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "authenticationType": {
            "type": "string"
          },
          "isAuthenticated": {
            "type": "boolean"
          }
        }
      },
      "IPAddress": {
        "type": "object",
        "properties": {
          "addressFamily": {
            "$ref": "#/components/schemas/AddressFamily"
          },
          "scopeId": {
            "type": "integer",
            "format": "int64"
          },
          "isIPv6Multicast": {
            "type": "boolean"
          },
          "isIPv6LinkLocal": {
            "type": "boolean"
          },
          "isIPv6SiteLocal": {
            "type": "boolean"
          },
          "isIPv6Teredo": {
            "type": "boolean"
          },
          "isIPv6UniqueLocal": {
            "type": "boolean"
          },
          "isIPv4MappedToIPv6": {
            "type": "boolean"
          },
          "address": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "IPageListOfIdentityUserDto": {
        "type": "object",
        "properties": {
          "currentPageSize": {
            "type": "integer",
            "format": "int32"
          },
          "currentStartIndex": {
            "type": "integer",
            "format": "int32"
          },
          "currentEndIndex": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "hasNext": {
            "type": "boolean"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityUserDto2"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "IResponseCookies": {
        "type": "object"
      },
      "IServiceProvider": {
        "type": "object"
      },
      "ISession": {
        "type": "object",
        "properties": {
          "isAvailable": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "keys": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "KeySizes": {
        "required": [
          "minSize",
          "maxSize",
          "skipSize"
        ],
        "type": "object",
        "properties": {
          "minSize": {
            "type": "integer",
            "format": "int32"
          },
          "maxSize": {
            "type": "integer",
            "format": "int32"
          },
          "skipSize": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "KeyValuePairOfstringAndstring": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "KeyValuePairOfstringAndStringValues": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "KeyValuePairOfTypeAndObject": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "key": {
            "$ref": "#/components/schemas/Type"
          },
          "value": { }
        }
      },
      "LoginRequest": {
        "required": [
          "userNameOrEmail",
          "password",
          "remember"
        ],
        "type": "object",
        "properties": {
          "userNameOrEmail": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "remember": {
            "type": "boolean"
          }
        }
      },
      "LoginResponse": {
        "required": [
          "userId",
          "userName",
          "firstName",
          "lastName",
          "accessToken",
          "refreshToken"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "userName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "Oid": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "friendlyName": {
            "type": "string"
          }
        }
      },
      "PathString": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "hasValue": {
            "type": "boolean"
          }
        }
      },
      "PipeReader": {
        "type": "string",
        "format": "binary"
      },
      "PipeWriter": {
        "type": "object",
        "properties": {
          "canGetUnflushedBytes": {
            "type": "boolean"
          },
          "unflushedBytes": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "detail": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          }
        }
      },
      "PublicKey": {
        "type": "object",
        "properties": {
          "encodedKeyValue": {
            "$ref": "#/components/schemas/AsnEncodedData"
          },
          "encodedParameters": {
            "$ref": "#/components/schemas/AsnEncodedData"
          },
          "key": {
            "$ref": "#/components/schemas/AsymmetricAlgorithm"
          },
          "oid": {
            "$ref": "#/components/schemas/Oid"
          }
        }
      },
      "QueryString": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "hasValue": {
            "type": "boolean"
          }
        }
      },
      "ReadOnlyMemoryOfbyte": {
        "type": "string"
      },
      "RefreshTokenRequest": {
        "required": [
          "accessToken",
          "refreshToken"
        ],
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RefreshTokenResponse": {
        "required": [
          "userId",
          "userName",
          "firstName",
          "lastName",
          "accessToken",
          "refreshToken"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "userName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "RegisterUserRequest": {
        "required": [
          "firstName",
          "lastName",
          "userName",
          "email",
          "phoneNumber",
          "password",
          "confirmPassword"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "confirmPassword": {
            "type": "string",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RegisterUserResponse": {
        "required": [
          "userIdentity"
        ],
        "type": "object",
        "properties": {
          "userIdentity": {
            "$ref": "#/components/schemas/IdentityUserDto"
          }
        }
      },
      "RevokeAccessTokenRequest": {
        "required": [
          "accessToken"
        ],
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RevokeRefreshTokenRequest": {
        "required": [
          "refreshToken"
        ],
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SafeWaitHandle": {
        "type": "object",
        "properties": {
          "isInvalid": {
            "type": "boolean"
          },
          "isClosed": {
            "type": "boolean"
          }
        }
      },
      "SendEmailVerificationCodeRequest": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Stream": {
        "type": "string",
        "format": "binary"
      },
      "Type": {
        "nullable": true
      },
      "UpdateUserStateRequest": {
        "required": [
          "userState"
        ],
        "type": "object",
        "properties": {
          "userState": {
            "$ref": "#/components/schemas/UserState"
          }
        }
      },
      "UserState": {
        "enum": [
          "Active",
          "Locked"
        ],
        "type": "string"
      },
      "VerifyEmailRequest": {
        "required": [
          "email",
          "code"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WaitHandle": {
        "type": "object",
        "properties": {
          "handle": { },
          "safeWaitHandle": {
            "$ref": "#/components/schemas/SafeWaitHandle"
          }
        }
      },
      "WebSocketManager": {
        "type": "object",
        "properties": {
          "isWebSocketRequest": {
            "type": "boolean"
          },
          "webSocketRequestedProtocols": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "X500DistinguishedName": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "oid": {
            "$ref": "#/components/schemas/Oid"
          },
          "rawData": {
            "type": "string",
            "format": "byte"
          }
        }
      },
      "X509Certificate2": {
        "type": "object",
        "properties": {
          "archived": {
            "type": "boolean"
          },
          "extensions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/X509Extension"
            }
          },
          "friendlyName": {
            "type": "string"
          },
          "hasPrivateKey": {
            "type": "boolean"
          },
          "privateKey": {
            "$ref": "#/components/schemas/AsymmetricAlgorithm"
          },
          "issuerName": {
            "$ref": "#/components/schemas/X500DistinguishedName"
          },
          "notAfter": {
            "type": "string",
            "format": "date-time"
          },
          "notBefore": {
            "type": "string",
            "format": "date-time"
          },
          "publicKey": {
            "$ref": "#/components/schemas/PublicKey"
          },
          "rawData": {
            "type": "string",
            "format": "byte"
          },
          "rawDataMemory": {
            "$ref": "#/components/schemas/ReadOnlyMemoryOfbyte"
          },
          "serialNumber": {
            "type": "string"
          },
          "signatureAlgorithm": {
            "$ref": "#/components/schemas/Oid"
          },
          "subjectName": {
            "$ref": "#/components/schemas/X500DistinguishedName"
          },
          "thumbprint": {
            "type": "string"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "handle": { },
          "issuer": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "serialNumberBytes": {
            "$ref": "#/components/schemas/ReadOnlyMemoryOfbyte"
          }
        }
      },
      "X509Extension": {
        "type": "object",
        "properties": {
          "critical": {
            "type": "boolean"
          },
          "oid": {
            "$ref": "#/components/schemas/Oid"
          },
          "rawData": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://localhost:7001/connect/authorize",
            "tokenUrl": "https://localhost:7001/connect/token",
            "scopes": {
              "gateway": "API Gateway access",
              "info": "User info",
              "roles": "User roles"
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Identity"
    },
    {
      "name": "Users"
    }
  ]
}